use * from core::testing

pub struct MyStruct(base: float) {
    base: float = base
}

impl MyStruct {
    fn s1(self, task: fn (float) -> float) -> float = {
        let dt = 1.0
        dt = task(dt)
        dt
    }
    fn s2(self, task: fn (MyStruct) -> float) -> float = {
        let dt = 0.0

        dt = task(self) // UNCOMMENT HERE TO TRIGGER THE MESSAGE

        dt
    }
}

sync fn f1(f: float) -> float = { f + 1.0 }
sync fn f2(c: MyStruct) -> float = { c.base + 1.0 }

test fn test_issue_55() -> Unit = {
    const common : MyStruct = MyStruct(10.0)

    assert_float(2.0, common.s1(fn (f) -> f1(f)))
    assert_float(11.0, common.s2(fn (f) -> f2(f)))

    // These next two lines appear to be equivalent.
    assert_float(2.0, common.s1(f1))
    assert_float(11.0, common.s2(f2))
}